{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SettingsScreen;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _jsxFileName = \"/Users/angelo/Desktop/cooking-app-rn/components/screens/SettingsScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Stack = (0, _stack.createStackNavigator)();\n\nfunction SettingsScreen() {\n  return _react.default.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#2980b9'\n      },\n      headerTintColor: 'white',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        fontFamily: 'Poppins-Regular'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"Settings\",\n    component: SettingsComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar SettingsComponent = function (_Component) {\n  (0, _inherits2.default)(SettingsComponent, _Component);\n\n  var _super = _createSuper(SettingsComponent);\n\n  function SettingsComponent() {\n    (0, _classCallCheck2.default)(this, SettingsComponent);\n    return _super.call(this);\n  }\n\n  (0, _createClass2.default)(SettingsComponent, [{\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.settingsView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, \"Settings Page\")), _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"Developed by Angelo Voicu\")));\n    }\n  }]);\n  return SettingsComponent;\n}(_react.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  settingsView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/angelo/Desktop/cooking-app-rn/components/screens/SettingsScreen.js"],"names":["Stack","SettingsScreen","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","fontFamily","SettingsComponent","styles","settingsView","Component","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AACA,IAAMA,KAAK,GAAG,kCAAd;;AAEe,SAASC,cAAT,GAA0B;AACvC,SACE,6BAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE;AAACC,QAAAA,eAAe,EAAE;AAAlB,OADA;AAEbC,MAAAA,eAAe,EAAE,OAFJ;AAGbC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE,MADI;AAEhBC,QAAAA,UAAU,EAAE;AAFI;AAHL,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,6BAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD;;IAEKA,iB;;;;;AACJ,+BAAc;AAAA;AAAA;AAEb;;;;6BACQ;AACP,aACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,CAJF,CADF;AAUD;;;EAf6BC,gB;;AAkBhC,IAAMF,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,YAAY,EAAE;AACZI,IAAAA,IAAI,EAAE,CADM;AAEZC,IAAAA,cAAc,EAAE,QAFJ;AAGZC,IAAAA,UAAU,EAAE;AAHA;AADiB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {View, Text, StyleSheet, Button, Image} from 'react-native';\n\nimport {createStackNavigator} from '@react-navigation/stack';\nconst Stack = createStackNavigator();\n\nexport default function SettingsScreen() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {backgroundColor: '#2980b9'},\n        headerTintColor: 'white',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n          fontFamily: 'Poppins-Regular',\n        },\n      }}>\n      <Stack.Screen name=\"Settings\" component={SettingsComponent} />\n    </Stack.Navigator>\n  );\n}\n\nclass SettingsComponent extends Component {\n  constructor() {\n    super();\n  }\n  render() {\n    return (\n      <View style={styles.settingsView}>\n        <View>\n          <Text>Settings Page</Text>\n        </View>\n        <View>\n          <Text>Developed by Angelo Voicu</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  settingsView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}