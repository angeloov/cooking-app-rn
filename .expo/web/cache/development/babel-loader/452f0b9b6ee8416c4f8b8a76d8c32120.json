{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"TextTrackType\", {\n  enumerable: true,\n  get: function get() {\n    return _TextTrackType.default;\n  }\n});\nObject.defineProperty(exports, \"FilterType\", {\n  enumerable: true,\n  get: function get() {\n    return _FilterType.default;\n  }\n});\nObject.defineProperty(exports, \"DRMType\", {\n  enumerable: true,\n  get: function get() {\n    return _DRMType.default;\n  }\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _resolveAssetSource = _interopRequireDefault(require(\"react-native/Libraries/Image/resolveAssetSource\"));\n\nvar _TextTrackType = _interopRequireDefault(require(\"./TextTrackType\"));\n\nvar _FilterType = _interopRequireDefault(require(\"./FilterType\"));\n\nvar _DRMType = _interopRequireDefault(require(\"./DRMType\"));\n\nvar _VideoResizeMode = _interopRequireDefault(require(\"./VideoResizeMode.js\"));\n\nvar _jsxFileName = \"/Users/angelo/Desktop/cooking-app-rn/node_modules/react-native-video/Video.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar styles = _reactNative.StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\n\nvar Video = function (_Component) {\n  (0, _inherits2.default)(Video, _Component);\n\n  var _super = _createSuper(Video);\n\n  function Video(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Video);\n    _this = _super.call(this, props);\n\n    _this.seek = function (time) {\n      var tolerance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      if (isNaN(time)) {\n        throw new Error('Specified time is not a number');\n      }\n\n      if (_reactNative.Platform.OS === 'ios') {\n        _this.setNativeProps({\n          seek: {\n            time: time,\n            tolerance: tolerance\n          }\n        });\n      } else {\n        _this.setNativeProps({\n          seek: time\n        });\n      }\n    };\n\n    _this.presentFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: true\n      });\n    };\n\n    _this.dismissFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: false\n      });\n    };\n\n    _this.save = function _callee(options) {\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(_reactNative.NativeModules.VideoManager.save(options, (0, _reactNative.findNodeHandle)(_this._root)));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.restoreUserInterfaceForPictureInPictureStopCompleted = function (restored) {\n      _this.setNativeProps({\n        restoreUserInterfaceForPIPStopCompletionHandler: restored\n      });\n    };\n\n    _this._assignRoot = function (component) {\n      _this._root = component;\n    };\n\n    _this._hidePoster = function () {\n      if (_this.state.showPoster) {\n        _this.setState({\n          showPoster: false\n        });\n      }\n    };\n\n    _this._onLoadStart = function (event) {\n      if (_this.props.onLoadStart) {\n        _this.props.onLoadStart(event.nativeEvent);\n      }\n    };\n\n    _this._onLoad = function (event) {\n      if (_reactNative.Platform.OS === 'windows') {\n        _this._hidePoster();\n      }\n\n      if (_this.props.onLoad) {\n        _this.props.onLoad(event.nativeEvent);\n      }\n    };\n\n    _this._onError = function (event) {\n      if (_this.props.onError) {\n        _this.props.onError(event.nativeEvent);\n      }\n    };\n\n    _this._onProgress = function (event) {\n      if (_this.props.onProgress) {\n        _this.props.onProgress(event.nativeEvent);\n      }\n    };\n\n    _this._onBandwidthUpdate = function (event) {\n      if (_this.props.onBandwidthUpdate) {\n        _this.props.onBandwidthUpdate(event.nativeEvent);\n      }\n    };\n\n    _this._onSeek = function (event) {\n      if (_this.props.onSeek) {\n        _this.props.onSeek(event.nativeEvent);\n      }\n    };\n\n    _this._onEnd = function (event) {\n      if (_this.props.onEnd) {\n        _this.props.onEnd(event.nativeEvent);\n      }\n    };\n\n    _this._onTimedMetadata = function (event) {\n      if (_this.props.onTimedMetadata) {\n        _this.props.onTimedMetadata(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillPresent = function (event) {\n      if (_this.props.onFullscreenPlayerWillPresent) {\n        _this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidPresent = function (event) {\n      if (_this.props.onFullscreenPlayerDidPresent) {\n        _this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerWillDismiss) {\n        _this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerDidDismiss) {\n        _this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onReadyForDisplay = function (event) {\n      if (!_this.props.audioOnly) {\n        _this._hidePoster();\n      }\n\n      if (_this.props.onReadyForDisplay) {\n        _this.props.onReadyForDisplay(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackStalled = function (event) {\n      if (_this.props.onPlaybackStalled) {\n        _this.props.onPlaybackStalled(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackResume = function (event) {\n      if (_this.props.onPlaybackResume) {\n        _this.props.onPlaybackResume(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackRateChange = function (event) {\n      if (_this.props.onPlaybackRateChange) {\n        _this.props.onPlaybackRateChange(event.nativeEvent);\n      }\n    };\n\n    _this._onExternalPlaybackChange = function (event) {\n      if (_this.props.onExternalPlaybackChange) {\n        _this.props.onExternalPlaybackChange(event.nativeEvent);\n      }\n    };\n\n    _this._onAudioBecomingNoisy = function () {\n      if (_this.props.onAudioBecomingNoisy) {\n        _this.props.onAudioBecomingNoisy();\n      }\n    };\n\n    _this._onPictureInPictureStatusChanged = function (event) {\n      if (_this.props.onPictureInPictureStatusChanged) {\n        _this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onRestoreUserInterfaceForPictureInPictureStop = function (event) {\n      if (_this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n        _this.props.onRestoreUserInterfaceForPictureInPictureStop();\n      }\n    };\n\n    _this._onAudioFocusChanged = function (event) {\n      if (_this.props.onAudioFocusChanged) {\n        _this.props.onAudioFocusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onBuffer = function (event) {\n      if (_this.props.onBuffer) {\n        _this.props.onBuffer(event.nativeEvent);\n      }\n    };\n\n    _this._onGetLicense = function (event) {\n      if (_this.props.drm && _this.props.drm.getLicense instanceof Function) {\n        var data = event.nativeEvent;\n\n        if (data && data.spc) {\n          var getLicenseOverride = _this.props.drm.getLicense(data.spc, data.contentId, data.spcBase64, _this.props);\n\n          var getLicensePromise = Promise.resolve(getLicenseOverride);\n          getLicensePromise.then(function (result) {\n            if (result !== undefined) {\n              _reactNative.NativeModules.VideoManager.setLicenseResult(result, (0, _reactNative.findNodeHandle)(_this._root));\n            } else {\n              _reactNative.NativeModules.VideoManager.setLicenseError && _reactNative.NativeModules.VideoManager.setLicenseError('Empty license result', (0, _reactNative.findNodeHandle)(_this._root));\n            }\n          }).catch(function (error) {\n            _reactNative.NativeModules.VideoManager.setLicenseError && _reactNative.NativeModules.VideoManager.setLicenseError(error, (0, _reactNative.findNodeHandle)(_this._root));\n          });\n        } else {\n          _reactNative.NativeModules.VideoManager.setLicenseError && _reactNative.NativeModules.VideoManager.setLicenseError(\"No spc received\", (0, _reactNative.findNodeHandle)(_this._root));\n        }\n      }\n    };\n\n    _this.getViewManagerConfig = function (viewManagerName) {\n      if (!_reactNative.NativeModules.UIManager.getViewManagerConfig) {\n        return _reactNative.NativeModules.UIManager[viewManagerName];\n      }\n\n      return _reactNative.NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n    };\n\n    _this.state = {\n      showPoster: !!props.poster\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Video, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"toTypeString\",\n    value: function toTypeString(x) {\n      switch (typeof x) {\n        case 'object':\n          return x instanceof Date ? x.toISOString() : JSON.stringify(x);\n\n        case 'undefined':\n          return '';\n\n        default:\n          return x.toString();\n      }\n    }\n  }, {\n    key: \"stringsOnlyObject\",\n    value: function stringsOnlyObject(obj) {\n      var _this2 = this;\n\n      var strObj = {};\n      Object.keys(obj).forEach(function (x) {\n        strObj[x] = _this2.toTypeString(obj[x]);\n      });\n      return strObj;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resizeMode = this.props.resizeMode;\n      var source = (0, _resolveAssetSource.default)(this.props.source) || {};\n      var shouldCache = !source.__packager_asset;\n      var uri = source.uri || '';\n\n      if (uri && uri.match(/^\\//)) {\n        uri = \"file://\" + uri;\n      }\n\n      if (!uri) {\n        console.warn('Trying to load empty source.');\n      }\n\n      var isNetwork = !!(uri && uri.match(/^https?:/));\n      var isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n      var nativeResizeMode;\n      var RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n      if (resizeMode === _VideoResizeMode.default.stretch) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n      } else if (resizeMode === _VideoResizeMode.default.contain) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n      } else if (resizeMode === _VideoResizeMode.default.cover) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n      } else {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n      }\n\n      var nativeProps = (0, _extends2.default)({}, this.props);\n      (0, _extends2.default)(nativeProps, {\n        style: [styles.base, nativeProps.style],\n        resizeMode: nativeResizeMode,\n        src: {\n          uri: uri,\n          isNetwork: isNetwork,\n          isAsset: isAsset,\n          shouldCache: shouldCache,\n          type: source.type || '',\n          mainVer: source.mainVer || 0,\n          patchVer: source.patchVer || 0,\n          requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {}\n        },\n        onVideoLoadStart: this._onLoadStart,\n        onVideoLoad: this._onLoad,\n        onVideoError: this._onError,\n        onVideoProgress: this._onProgress,\n        onVideoSeek: this._onSeek,\n        onVideoEnd: this._onEnd,\n        onVideoBuffer: this._onBuffer,\n        onVideoBandwidthUpdate: this._onBandwidthUpdate,\n        onTimedMetadata: this._onTimedMetadata,\n        onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n        onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n        onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n        onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n        onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n        onReadyForDisplay: this._onReadyForDisplay,\n        onPlaybackStalled: this._onPlaybackStalled,\n        onPlaybackResume: this._onPlaybackResume,\n        onPlaybackRateChange: this._onPlaybackRateChange,\n        onAudioFocusChanged: this._onAudioFocusChanged,\n        onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onGetLicense: nativeProps.drm && nativeProps.drm.getLicense && this._onGetLicense,\n        onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n        onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop\n      });\n\n      var posterStyle = _objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), {}, {\n        resizeMode: this.props.posterResizeMode || 'contain'\n      });\n\n      return _react.default.createElement(_reactNative.View, {\n        style: nativeProps.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(RCTVideo, (0, _extends2.default)({\n        ref: this._assignRoot\n      }, nativeProps, {\n        style: _reactNative.StyleSheet.absoluteFill,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 9\n        }\n      })), this.state.showPoster && _react.default.createElement(_reactNative.Image, {\n        style: posterStyle,\n        source: {\n          uri: this.props.poster\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n  return Video;\n}(_react.Component);\n\nexports.default = Video;\nVideo.propTypes = _objectSpread({\n  filter: _propTypes.default.oneOf([_FilterType.default.NONE, _FilterType.default.INVERT, _FilterType.default.MONOCHROME, _FilterType.default.POSTERIZE, _FilterType.default.FALSE, _FilterType.default.MAXIMUMCOMPONENT, _FilterType.default.MINIMUMCOMPONENT, _FilterType.default.CHROME, _FilterType.default.FADE, _FilterType.default.INSTANT, _FilterType.default.MONO, _FilterType.default.NOIR, _FilterType.default.PROCESS, _FilterType.default.TONAL, _FilterType.default.TRANSFER, _FilterType.default.SEPIA]),\n  filterEnabled: _propTypes.default.bool,\n  src: _propTypes.default.object,\n  seek: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),\n  fullscreen: _propTypes.default.bool,\n  onVideoLoadStart: _propTypes.default.func,\n  onVideoLoad: _propTypes.default.func,\n  onVideoBuffer: _propTypes.default.func,\n  onVideoError: _propTypes.default.func,\n  onVideoProgress: _propTypes.default.func,\n  onVideoBandwidthUpdate: _propTypes.default.func,\n  onVideoSeek: _propTypes.default.func,\n  onVideoEnd: _propTypes.default.func,\n  onTimedMetadata: _propTypes.default.func,\n  onVideoAudioBecomingNoisy: _propTypes.default.func,\n  onVideoExternalPlaybackChange: _propTypes.default.func,\n  onVideoFullscreenPlayerWillPresent: _propTypes.default.func,\n  onVideoFullscreenPlayerDidPresent: _propTypes.default.func,\n  onVideoFullscreenPlayerWillDismiss: _propTypes.default.func,\n  onVideoFullscreenPlayerDidDismiss: _propTypes.default.func,\n  source: _propTypes.default.oneOfType([_propTypes.default.shape({\n    uri: _propTypes.default.string\n  }), _propTypes.default.number]),\n  drm: _propTypes.default.shape({\n    type: _propTypes.default.oneOf([_DRMType.default.CLEARKEY, _DRMType.default.FAIRPLAY, _DRMType.default.WIDEVINE, _DRMType.default.PLAYREADY]),\n    licenseServer: _propTypes.default.string,\n    headers: _propTypes.default.shape({}),\n    base64Certificate: _propTypes.default.bool,\n    certificateUrl: _propTypes.default.string,\n    getLicense: _propTypes.default.func\n  }),\n  minLoadRetryCount: _propTypes.default.number,\n  maxBitRate: _propTypes.default.number,\n  resizeMode: _propTypes.default.string,\n  poster: _propTypes.default.string,\n  posterResizeMode: _reactNative.Image.propTypes.resizeMode,\n  repeat: _propTypes.default.bool,\n  automaticallyWaitsToMinimizeStalling: _propTypes.default.bool,\n  allowsExternalPlayback: _propTypes.default.bool,\n  selectedAudioTrack: _propTypes.default.shape({\n    type: _propTypes.default.string.isRequired,\n    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }),\n  selectedVideoTrack: _propTypes.default.shape({\n    type: _propTypes.default.string.isRequired,\n    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }),\n  selectedTextTrack: _propTypes.default.shape({\n    type: _propTypes.default.string.isRequired,\n    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }),\n  textTracks: _propTypes.default.arrayOf(_propTypes.default.shape({\n    title: _propTypes.default.string,\n    uri: _propTypes.default.string.isRequired,\n    type: _propTypes.default.oneOf([_TextTrackType.default.SRT, _TextTrackType.default.TTML, _TextTrackType.default.VTT]),\n    language: _propTypes.default.string.isRequired\n  })),\n  paused: _propTypes.default.bool,\n  muted: _propTypes.default.bool,\n  volume: _propTypes.default.number,\n  bufferConfig: _propTypes.default.shape({\n    minBufferMs: _propTypes.default.number,\n    maxBufferMs: _propTypes.default.number,\n    bufferForPlaybackMs: _propTypes.default.number,\n    bufferForPlaybackAfterRebufferMs: _propTypes.default.number\n  }),\n  stereoPan: _propTypes.default.number,\n  rate: _propTypes.default.number,\n  pictureInPicture: _propTypes.default.bool,\n  playInBackground: _propTypes.default.bool,\n  preferredForwardBufferDuration: _propTypes.default.number,\n  playWhenInactive: _propTypes.default.bool,\n  ignoreSilentSwitch: _propTypes.default.oneOf(['ignore', 'obey']),\n  reportBandwidth: _propTypes.default.bool,\n  disableFocus: _propTypes.default.bool,\n  controls: _propTypes.default.bool,\n  audioOnly: _propTypes.default.bool,\n  currentTime: _propTypes.default.number,\n  fullscreenAutorotate: _propTypes.default.bool,\n  fullscreenOrientation: _propTypes.default.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: _propTypes.default.number,\n  useTextureView: _propTypes.default.bool,\n  hideShutterView: _propTypes.default.bool,\n  onLoadStart: _propTypes.default.func,\n  onLoad: _propTypes.default.func,\n  onBuffer: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onProgress: _propTypes.default.func,\n  onBandwidthUpdate: _propTypes.default.func,\n  onSeek: _propTypes.default.func,\n  onEnd: _propTypes.default.func,\n  onFullscreenPlayerWillPresent: _propTypes.default.func,\n  onFullscreenPlayerDidPresent: _propTypes.default.func,\n  onFullscreenPlayerWillDismiss: _propTypes.default.func,\n  onFullscreenPlayerDidDismiss: _propTypes.default.func,\n  onReadyForDisplay: _propTypes.default.func,\n  onPlaybackStalled: _propTypes.default.func,\n  onPlaybackResume: _propTypes.default.func,\n  onPlaybackRateChange: _propTypes.default.func,\n  onAudioFocusChanged: _propTypes.default.func,\n  onAudioBecomingNoisy: _propTypes.default.func,\n  onPictureInPictureStatusChanged: _propTypes.default.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: _propTypes.default.func,\n  onExternalPlaybackChange: _propTypes.default.func,\n  scaleX: _propTypes.default.number,\n  scaleY: _propTypes.default.number,\n  translateX: _propTypes.default.number,\n  translateY: _propTypes.default.number,\n  rotation: _propTypes.default.number\n}, _reactNative.ViewPropTypes);\nvar RCTVideo = (0, _reactNative.requireNativeComponent)('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true\n  }\n});","map":{"version":3,"sources":["/Users/angelo/Desktop/cooking-app-rn/node_modules/react-native-video/Video.js"],"names":["styles","StyleSheet","create","base","overflow","Video","props","seek","time","tolerance","isNaN","Error","Platform","OS","setNativeProps","presentFullscreenPlayer","fullscreen","dismissFullscreenPlayer","save","options","NativeModules","VideoManager","_root","restoreUserInterfaceForPictureInPictureStopCompleted","restored","restoreUserInterfaceForPIPStopCompletionHandler","_assignRoot","component","_hidePoster","state","showPoster","setState","_onLoadStart","event","onLoadStart","nativeEvent","_onLoad","onLoad","_onError","onError","_onProgress","onProgress","_onBandwidthUpdate","onBandwidthUpdate","_onSeek","onSeek","_onEnd","onEnd","_onTimedMetadata","onTimedMetadata","_onFullscreenPlayerWillPresent","onFullscreenPlayerWillPresent","_onFullscreenPlayerDidPresent","onFullscreenPlayerDidPresent","_onFullscreenPlayerWillDismiss","onFullscreenPlayerWillDismiss","_onFullscreenPlayerDidDismiss","onFullscreenPlayerDidDismiss","_onReadyForDisplay","audioOnly","onReadyForDisplay","_onPlaybackStalled","onPlaybackStalled","_onPlaybackResume","onPlaybackResume","_onPlaybackRateChange","onPlaybackRateChange","_onExternalPlaybackChange","onExternalPlaybackChange","_onAudioBecomingNoisy","onAudioBecomingNoisy","_onPictureInPictureStatusChanged","onPictureInPictureStatusChanged","_onRestoreUserInterfaceForPictureInPictureStop","onRestoreUserInterfaceForPictureInPictureStop","_onAudioFocusChanged","onAudioFocusChanged","_onBuffer","onBuffer","_onGetLicense","drm","getLicense","Function","data","spc","getLicenseOverride","contentId","spcBase64","getLicensePromise","Promise","resolve","then","result","undefined","setLicenseResult","setLicenseError","catch","error","getViewManagerConfig","viewManagerName","UIManager","poster","nativeProps","x","Date","toISOString","JSON","stringify","toString","obj","strObj","Object","keys","forEach","toTypeString","resizeMode","source","shouldCache","__packager_asset","uri","match","console","warn","isNetwork","isAsset","nativeResizeMode","RCTVideoInstance","VideoResizeMode","stretch","Constants","ScaleToFill","contain","ScaleAspectFit","cover","ScaleAspectFill","ScaleNone","style","src","type","mainVer","patchVer","requestHeaders","headers","stringsOnlyObject","onVideoLoadStart","onVideoLoad","onVideoError","onVideoProgress","onVideoSeek","onVideoEnd","onVideoBuffer","onVideoBandwidthUpdate","onVideoAudioBecomingNoisy","onVideoExternalPlaybackChange","onVideoFullscreenPlayerWillPresent","onVideoFullscreenPlayerDidPresent","onVideoFullscreenPlayerWillDismiss","onVideoFullscreenPlayerDidDismiss","onGetLicense","posterStyle","absoluteFillObject","posterResizeMode","absoluteFill","Component","propTypes","filter","PropTypes","oneOf","FilterType","NONE","INVERT","MONOCHROME","POSTERIZE","FALSE","MAXIMUMCOMPONENT","MINIMUMCOMPONENT","CHROME","FADE","INSTANT","MONO","NOIR","PROCESS","TONAL","TRANSFER","SEPIA","filterEnabled","bool","object","oneOfType","number","func","shape","string","DRMType","CLEARKEY","FAIRPLAY","WIDEVINE","PLAYREADY","licenseServer","base64Certificate","certificateUrl","minLoadRetryCount","maxBitRate","Image","repeat","automaticallyWaitsToMinimizeStalling","allowsExternalPlayback","selectedAudioTrack","isRequired","value","selectedVideoTrack","selectedTextTrack","textTracks","arrayOf","title","TextTrackType","SRT","TTML","VTT","language","paused","muted","volume","bufferConfig","minBufferMs","maxBufferMs","bufferForPlaybackMs","bufferForPlaybackAfterRebufferMs","stereoPan","rate","pictureInPicture","playInBackground","preferredForwardBufferDuration","playWhenInactive","ignoreSilentSwitch","reportBandwidth","disableFocus","controls","currentTime","fullscreenAutorotate","fullscreenOrientation","progressUpdateInterval","useTextureView","hideShutterView","needsToRestoreUserInterfaceForPictureInPictureStop","scaleX","scaleY","translateX","translateY","rotation","ViewPropTypes","RCTVideo","nativeOnly"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, requireNativeComponent, NativeModules, View, ViewPropTypes, Image, Platform, findNodeHandle } from 'react-native';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from './TextTrackType';\nimport FilterType from './FilterType';\nimport DRMType from './DRMType';\nimport VideoResizeMode from './VideoResizeMode.js';\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nexport { TextTrackType, FilterType, DRMType };\n\nexport default class Video extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPoster: !!props.poster,\n    };\n  }\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n\n  toTypeString(x) {\n    switch (typeof x) {\n      case 'object':\n        return x instanceof Date\n          ? x.toISOString()\n          : JSON.stringify(x); // object, null\n      case 'undefined':\n        return '';\n      default: // boolean, number, string\n        return x.toString();\n    }\n  }\n\n  stringsOnlyObject(obj) {\n    const strObj = {};\n\n    Object.keys(obj).forEach(x => {\n      strObj[x] = this.toTypeString(obj[x]);\n    });\n\n    return strObj;\n  }\n\n  seek = (time, tolerance = 100) => {\n    if (isNaN(time)) {throw new Error('Specified time is not a number');}\n\n    if (Platform.OS === 'ios') {\n      this.setNativeProps({\n        seek: {\n          time,\n          tolerance,\n        },\n      });\n    } else {\n      this.setNativeProps({ seek: time });\n    }\n  };\n\n  presentFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: true });\n  };\n\n  dismissFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: false });\n  };\n\n  save = async (options?) => {\n    return await NativeModules.VideoManager.save(options, findNodeHandle(this._root));\n  }\n\n  restoreUserInterfaceForPictureInPictureStopCompleted = (restored) => {\n    this.setNativeProps({ restoreUserInterfaceForPIPStopCompletionHandler: restored });\n  };\n\n  _assignRoot = (component) => {\n    this._root = component;\n  };\n\n  _hidePoster = () => {\n    if (this.state.showPoster) {\n      this.setState({ showPoster: false });\n    }\n  }\n\n  _onLoadStart = (event) => {\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart(event.nativeEvent);\n    }\n  };\n\n  _onLoad = (event) => {\n    // Need to hide poster here for windows as onReadyForDisplay is not implemented\n    if (Platform.OS === 'windows') {\n      this._hidePoster();\n    }\n    if (this.props.onLoad) {\n      this.props.onLoad(event.nativeEvent);\n    }\n  };\n\n  _onError = (event) => {\n    if (this.props.onError) {\n      this.props.onError(event.nativeEvent);\n    }\n  };\n\n  _onProgress = (event) => {\n    if (this.props.onProgress) {\n      this.props.onProgress(event.nativeEvent);\n    }\n  };\n\n  _onBandwidthUpdate = (event) => {\n    if (this.props.onBandwidthUpdate) {\n      this.props.onBandwidthUpdate(event.nativeEvent);\n    }\n  };\n\n  _onSeek = (event) => {\n    if (this.props.onSeek) {\n      this.props.onSeek(event.nativeEvent);\n    }\n  };\n\n  _onEnd = (event) => {\n    if (this.props.onEnd) {\n      this.props.onEnd(event.nativeEvent);\n    }\n  };\n\n  _onTimedMetadata = (event) => {\n    if (this.props.onTimedMetadata) {\n      this.props.onTimedMetadata(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillPresent = (event) => {\n    if (this.props.onFullscreenPlayerWillPresent) {\n      this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidPresent = (event) => {\n    if (this.props.onFullscreenPlayerDidPresent) {\n      this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillDismiss = (event) => {\n    if (this.props.onFullscreenPlayerWillDismiss) {\n      this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidDismiss = (event) => {\n    if (this.props.onFullscreenPlayerDidDismiss) {\n      this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n    }\n  };\n\n  _onReadyForDisplay = (event) => {\n    if (!this.props.audioOnly) {\n      this._hidePoster();\n    }\n\n    if (this.props.onReadyForDisplay) {\n      this.props.onReadyForDisplay(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackStalled = (event) => {\n    if (this.props.onPlaybackStalled) {\n      this.props.onPlaybackStalled(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackResume = (event) => {\n    if (this.props.onPlaybackResume) {\n      this.props.onPlaybackResume(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackRateChange = (event) => {\n    if (this.props.onPlaybackRateChange) {\n      this.props.onPlaybackRateChange(event.nativeEvent);\n    }\n  };\n\n  _onExternalPlaybackChange = (event) => {\n    if (this.props.onExternalPlaybackChange) {\n      this.props.onExternalPlaybackChange(event.nativeEvent);\n    }\n  }\n\n  _onAudioBecomingNoisy = () => {\n    if (this.props.onAudioBecomingNoisy) {\n      this.props.onAudioBecomingNoisy();\n    }\n  };\n\n  _onPictureInPictureStatusChanged = (event) => {\n    if (this.props.onPictureInPictureStatusChanged) {\n      this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n    }\n  };\n\n  _onRestoreUserInterfaceForPictureInPictureStop = (event) => {\n    if (this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n      this.props.onRestoreUserInterfaceForPictureInPictureStop();\n    }\n  };\n\n  _onAudioFocusChanged = (event) => {\n    if (this.props.onAudioFocusChanged) {\n      this.props.onAudioFocusChanged(event.nativeEvent);\n    }\n  };\n\n  _onBuffer = (event) => {\n    if (this.props.onBuffer) {\n      this.props.onBuffer(event.nativeEvent);\n    }\n  };\n\n  _onGetLicense = (event) => {\n    if (this.props.drm && this.props.drm.getLicense instanceof Function) {\n      const data = event.nativeEvent;\n      if (data && data.spc) {\n        const getLicenseOverride = this.props.drm.getLicense(data.spc, data.contentId, data.spcBase64, this.props);\n        const getLicensePromise = Promise.resolve(getLicenseOverride); // Handles both scenarios, getLicenseOverride being a promise and not.\n        getLicensePromise.then((result => {\n          if (result !== undefined) {\n            NativeModules.VideoManager.setLicenseResult(result, findNodeHandle(this._root));\n          } else {\n            NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError('Empty license result', findNodeHandle(this._root));\n          }\n        })).catch((error) => {\n          NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(error, findNodeHandle(this._root));\n        });\n      } else {\n        NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(\"No spc received\", findNodeHandle(this._root));\n      }\n    }\n  }\n  getViewManagerConfig = viewManagerName => {\n    if (!NativeModules.UIManager.getViewManagerConfig) {\n      return NativeModules.UIManager[viewManagerName];\n    }\n    return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n  };\n\n  render() {\n    const resizeMode = this.props.resizeMode;\n    const source = resolveAssetSource(this.props.source) || {};\n    const shouldCache = !source.__packager_asset;\n\n    let uri = source.uri || '';\n    if (uri && uri.match(/^\\//)) {\n      uri = `file://${uri}`;\n    }\n\n    if (!uri) {\n      console.warn('Trying to load empty source.');\n    }\n\n    const isNetwork = !!(uri && uri.match(/^https?:/));\n    const isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n\n    let nativeResizeMode;\n    const RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n    if (resizeMode === VideoResizeMode.stretch) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n    } else if (resizeMode === VideoResizeMode.contain) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n    } else if (resizeMode === VideoResizeMode.cover) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n    } else {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n    }\n\n    const nativeProps = Object.assign({}, this.props);\n    Object.assign(nativeProps, {\n      style: [styles.base, nativeProps.style],\n      resizeMode: nativeResizeMode,\n      src: {\n        uri,\n        isNetwork,\n        isAsset,\n        shouldCache,\n        type: source.type || '',\n        mainVer: source.mainVer || 0,\n        patchVer: source.patchVer || 0,\n        requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {},\n      },\n      onVideoLoadStart: this._onLoadStart,\n      onVideoLoad: this._onLoad,\n      onVideoError: this._onError,\n      onVideoProgress: this._onProgress,\n      onVideoSeek: this._onSeek,\n      onVideoEnd: this._onEnd,\n      onVideoBuffer: this._onBuffer,\n      onVideoBandwidthUpdate: this._onBandwidthUpdate,\n      onTimedMetadata: this._onTimedMetadata,\n      onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n      onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n      onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n      onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n      onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n      onReadyForDisplay: this._onReadyForDisplay,\n      onPlaybackStalled: this._onPlaybackStalled,\n      onPlaybackResume: this._onPlaybackResume,\n      onPlaybackRateChange: this._onPlaybackRateChange,\n      onAudioFocusChanged: this._onAudioFocusChanged,\n      onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onGetLicense: nativeProps.drm && nativeProps.drm.getLicense && this._onGetLicense,\n      onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n      onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop,\n    });\n\n    const posterStyle = {\n      ...StyleSheet.absoluteFillObject,\n      resizeMode: this.props.posterResizeMode || 'contain',\n    };\n\n    return (\n      <View style={nativeProps.style}>\n        <RCTVideo\n          ref={this._assignRoot}\n          {...nativeProps}\n          style={StyleSheet.absoluteFill}\n        />\n        {this.state.showPoster && (\n          <Image style={posterStyle} source={{ uri: this.props.poster }} />\n        )}\n      </View>\n    );\n  }\n}\n\nVideo.propTypes = {\n  filter: PropTypes.oneOf([\n    FilterType.NONE,\n    FilterType.INVERT,\n    FilterType.MONOCHROME,\n    FilterType.POSTERIZE,\n    FilterType.FALSE,\n    FilterType.MAXIMUMCOMPONENT,\n    FilterType.MINIMUMCOMPONENT,\n    FilterType.CHROME,\n    FilterType.FADE,\n    FilterType.INSTANT,\n    FilterType.MONO,\n    FilterType.NOIR,\n    FilterType.PROCESS,\n    FilterType.TONAL,\n    FilterType.TRANSFER,\n    FilterType.SEPIA,\n  ]),\n  filterEnabled: PropTypes.bool,\n  /* Native only */\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.object,\n  ]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoBandwidthUpdate: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoExternalPlaybackChange: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n\n  /* Wrapper component */\n  source: PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string,\n    }),\n    // Opaque type returned by require('./video.mp4')\n    PropTypes.number,\n  ]),\n  drm: PropTypes.shape({\n    type: PropTypes.oneOf([\n      DRMType.CLEARKEY, DRMType.FAIRPLAY, DRMType.WIDEVINE, DRMType.PLAYREADY\n    ]),\n    licenseServer: PropTypes.string,\n    headers: PropTypes.shape({}),\n    base64Certificate: PropTypes.bool,\n    certificateUrl: PropTypes.string,\n    getLicense: PropTypes.func,\n  }),\n  minLoadRetryCount: PropTypes.number,\n  maxBitRate: PropTypes.number,\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: Image.propTypes.resizeMode,\n  repeat: PropTypes.bool,\n  automaticallyWaitsToMinimizeStalling: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  selectedVideoTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  textTracks: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      type: PropTypes.oneOf([\n        TextTrackType.SRT,\n        TextTrackType.TTML,\n        TextTrackType.VTT,\n      ]),\n      language: PropTypes.string.isRequired,\n    })\n  ),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number,\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  pictureInPicture: PropTypes.bool,\n  playInBackground: PropTypes.bool,\n  preferredForwardBufferDuration: PropTypes.number,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  reportBandwidth: PropTypes.bool,\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  fullscreenAutorotate: PropTypes.bool,\n  fullscreenOrientation: PropTypes.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  hideShutterView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onBandwidthUpdate: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  onPictureInPictureStatusChanged: PropTypes.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\n  onExternalPlaybackChange: PropTypes.func,\n\n  /* Required by react-native */\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number,\n  ...ViewPropTypes,\n};\n\nconst RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}